MACRO PAWTEST1
*
Application COMIS QUIT
      Subroutine Count(Ihist,Ntest)
      Logical Hexist
      Vector Verco(100)
*
      If (Hexist(Ihist)) Then
         Call Hnoent(Ihist,K)
         Verco(Ntest)=K
      Else
         Verco(Ntest)=0
      Endif
*
      End
*
      REAL FUNCTION NAT2INT
*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      10   
*     Ntuple Title:   CERN Population
*     Creation:       15/03/96 09.53.34
*
*********************************************************
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      INTEGER CATEGORY,FLAG,AGE,SERVICE,CHILDREN,GRADE,STEP,HRWEEK,COST
      CHARACTER*32 DIVISION,NATION
*
      COMMON /PAWCR4/ CATEGORY,FLAG,AGE,SERVICE,CHILDREN,GRADE,STEP
     + ,HRWEEK,COST
      COMMON /PAWC32/ DIVISION,NATION
*
      CHARACTER*4 NAT(15)
      DATA NAT /'DE','CH','FR','IT','NL','GB','AT','BE','NO','ES'
     +,         'DK','SE','GR','ZZ','PT'/

*
*--   Enter user code here
*
      DO I=1,15
         IF(NAT(I).EQ.NATION)THEN
           NAT2INT = FLOAT(I)
           GOTO 99
         ENDIF
      ENDDO
      NAT2INT = 0.
*
  99  END
QUIT
*
Opt * ; Set *
*
Pict/File 51 pawtest1.higz 1024 n
Opt ZFL
Size 20 24
Set XMGL 1.2
Set XMGR 0.5
Set XWIN 1.2
Set YWIN 1.2
Set XVAL 0.1
Set YVAL 0.1
Set CSIZ 0.45
Zone 3 4
title 'PAWTEST1 on '//$os//'/'//$machine
Set *FON -60
Opt STAT
Set STAT 10
Set GSIZ 0.65
Set YGTI 0.3
Set VSIZ 0.2
Set TSIZ 0.2
Set YHTI 0.4
Set HCOL 1102
Set BCOL 1107.1
Csel ! 0.2
*
H/FILE 23 pawdemo.hbook
cd staff
nt/cut $1 age<23
nt/cut $2 cost>17500
*
NT = 36
V/CREATE OK([NT])
* -----------------------------------------------------------------------
* vec input            | 1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  0 |
* -----------------------------------------------------------------------
/vec/input ok(01:10)       7 3345  652  154    0    8    0    6    2    2 
/vec/input ok(11:20)    3354    0    0    8  256   49  282  320   52  284
/vec/input ok(21:30)     102 3354 3354   43   43    0   57 1311    0 1311
/vec/input ok(31:[NT])  3354    2  323  918  877   57
* -----------------------------------------------------------------------
* vec input            | 1 |  2 |  3 |  4 |  5 |  6 |  7 |  9 |  9 |  0 |
* -----------------------------------------------------------------------
*
*-----------------  Test Number 1  --------------------------------------
*
NT/PL 10.AGE AGE=23
CALL COUNT(1000000,1)
*
*-----------------  Test Number 2  --------------------------------------
*
NT/PL 10.AGE AGE>23
CALL COUNT(1000000,2)
*
*-----------------  Test Number 3  --------------------------------------
*
NT/PL 10.AGE AGE>23.AND.GRADE=7
CALL COUNT(1000000,3)
*
*-----------------  Test Number 4  --------------------------------------
*
NT/PL 10.AGE NATION='FR'.AND.GRADE=9
CALL COUNT(1000000,4)
*
*-----------------  Test Number 5  --------------------------------------
*
set gsiz 0.2
cd //pawc ; hi/del 1000000 ; cd //lun23/staff
NT/PLOT 10.AGE%COST%NAT2INT
set gsiz 0.8
CALL COUNT(1000000,5)
*
*-----------------  Test Number 6  --------------------------------------
*
NT/PLOT 10.AGE $1.OR.$2
CALL COUNT(1000000,6)
*
*-----------------  Test Number 7  --------------------------------------
*
NT/PLOT 10.AGE $1.AND.$2
CALL COUNT(1000000,7)
*
*-----------------  Test Number 8  --------------------------------------
*
NT/PLOT 10.COST $2.AND.TRUE
CALL COUNT(1000000,8)
*
*-----------------  Test Number 9  --------------------------------------
*
NT/PLOT 10.COST $1.AND.TRUE
CALL COUNT(1000000,9)
*
*-----------------  Test Number 10 --------------------------------------
*
NT/PLOT 10.AGE $1.OR.FALSE
CALL COUNT(1000000,10)
*
*-----------------  Test Number 11 --------------------------------------
*
NT/PLOT 10.AGE $1.OR.TRUE
CALL COUNT(1000000,11)
*
*-----------------  Test Number 12 --------------------------------------
*
NT/PLOT 10.AGE AGE<23.AND.COST>5000
CALL COUNT(1000000,12)
*
Waiting
*
*-----------------  Test Number 13 --------------------------------------
*
pict/ren ' ' picta
NT/PLOT 10.COST $1.AND.$2
CALL COUNT(1000000,13)
*
*-----------------  Test Number 14 --------------------------------------
*
NT/PLOT 10.COST $1.OR.$2
CALL COUNT(1000000,14)
*
*-----------------  Test Number 15 --------------------------------------
*
opt bar
NT/PLOT 10.DIVISION DIVISION='DD'
CALL COUNT(1000000,15)
*
*-----------------  Test Number 16 --------------------------------------
*
NT/PLOT 10.AGE AGE=INT(SQRT(900.))
CALL COUNT(1000000,16)
*
*-----------------  Test Number 17 --------------------------------------
*
NT/PLOT 10.GRADE GRADE=5
CALL COUNT(1000000,17)
*
*-----------------  Test Number 18 --------------------------------------
*
NT/PLOT 10.NATION NATION='GB'
CALL COUNT(1000000,18)
*
*-----------------  Test Number 19 --------------------------------------
*
NT/PLOT 10.SERVICE SERVICE=30
CALL COUNT(1000000,19)
*
*-----------------  Test Number 20 --------------------------------------
*
NT/PLOT 10.NATION match('*T',NATION)
CALL COUNT(1000000,20)
*
*-----------------  Test Number 21 --------------------------------------
*
NT/PLOT 10.NATION match('N*',NATION)
CALL COUNT(1000000,21)
*
*-----------------  Test Number 22 --------------------------------------
*
opt logy
NT/PLOT 10.NATION match('**',NATION)
CALL COUNT(1000000,22)
*
*-----------------  Test Number 23 --------------------------------------
*
NT/PLOT 10.NATION match('?*',NATION)
CALL COUNT(1000000,23)
*
*-----------------  Test Number 24 --------------------------------------
*
opt liny
mask/file stmask N
ntuple/loop 10 step=15>>stmask(1)
ntuple/loop 10 grade>4.and.step=13>>stmask(2)
ntuple/loop 10 (grade=13.and.step=10).or.(grade=14.and.step=7)>>stmask(3)
ntuple/plot 10.CATEGORY stmask(1).or.$1
CALL COUNT(1000000,24)
*
Waiting
*
*-----------------  Test Number 25 --------------------------------------
*
pict/ren ' ' pictb
ntuple/plot 10.grade stmask(1).or.$1
CALL COUNT(1000000,25)
*
*-----------------  Test Number 26 --------------------------------------
*
ntuple/plot 10.step stmask(2).and.$1
CALL COUNT(1000000,26)
*
*-----------------  Test Number 27 --------------------------------------
*
ntuple/plot 10.step stmask(3).and.(age>40)
CALL COUNT(1000000,27)
*
*-----------------  Test Number 28 --------------------------------------
*
ntuple/plot 10.children stmask(1).or.(grade>8)
CALL COUNT(1000000,28)
*
*-----------------  Test Number 29 --------------------------------------
*
ntuple/plot 10.children stmask(1).and.(grade>8)
CALL COUNT(1000000,29)
*
*-----------------  Test Number 30 --------------------------------------
*
ntuple/plot 10.children stmask(1).or.grade>8
CALL COUNT(1000000,30)
*
*-----------------  Test Number 31 --------------------------------------
*
UWFUNC 10 PAWTEST.F
NTUPLE/PLOT 10.CHILDREN STMASK(1).or.bool(2*PAWTEST.F)
CALL  COUNT(1000000,31)
*
*-----------------  Test Number 32 --------------------------------------
*
NT/PLOT 10.AGE $1.and.bool((2*PAWTEST.F))
CALL COUNT(1000000,32)
*
*-----------------  Test Number 33 --------------------------------------
*
opt nbar
set htyp 244
NT/PLOT 10.GRADE (AGE>50.AND.CHILDREN=1)*4/PAWTEST.F
CALL COUNT(1000000,33)
*
*-----------------  Test Number 34 --------------------------------------
*
NTUPLE/PLOT 10.CHILDREN STMASK(1).OR.STMASK(2)
CALL COUNT(1000000,34)
*
*-----------------  Test Number 35 --------------------------------------
*
NTUPLE/PLOT 10.CHILDREN STMASK(2).AND.TRUE
CALL COUNT(1000000,35)
*
*-----------------  Test Number 36 --------------------------------------
*
NTUPLE/PLOT 10.CHILDREN STMASK(3).OR.FALSE
CALL COUNT(1000000,36)
*

*
Do I=1,[NT]
   V1 = VERCO([I])
   V2 = OK([I])
   If [V1] <> [V2] Then
      Mess Test number [I] Failed (Value expected: [V2], Value found [V1])
      good = 0
   Else
      good = 1
   Endif
Enddo
*
set txal 20
set txfp -60
set chhe 0.7
selnt 1
pave 2 18 0.2 1.2 0.2 1005 1002 trs
If [good]=0 then
   MESS '****************************************************'
   MESS '*     YOU HAVE A BAD VERSION OF PAW                *'
   MESS '****************************************************'
   itx 10 0.4 'You have a bad version of PAW'
Else
   MESS '***********************************************************'
   MESS '*.......IT SEEMS THAT YOU HAVE A GOOD VERSION OF PAW!     *'
   MESS '***********************************************************'
   itx 10 0.4 You have a good version of PAW
Endif
*
CLOSE 23
MASK/CLOSE STMASK
pict/ren ' ' pictc
Waiting
*
opt nzfl
cd //lun51
izout *
message ' Replaying pictures from picture file: pawtest1.higz'
message ' Listing pictures in file:'
Pict/list
Waiting
pict/plot picta
Waiting
pict/plot pictb
Waiting
pict/plot pictc
pict/del *
*
message 'Now testing conversion of files to exchange mode (A) and back'
message 'Creating file pawtest1.txt'
toa pawtest1.txt
close 51
pict/file 51 pawtest1.higz 1024 n
message 'Recreating file pawtest1.higz from file pawtest1.txt'
fra pawtest1.txt
ld
Waiting
pict/plot pictc
clo 51
if $OS=UNIX then
   shell /bin/rm pawtest1.higz
   shell /bin/rm pawtest1.txt
   goto CLEAR
endif
if $OS=VMS then
   shell del pawtest1.higz;*
   shell del pawtest1.txt;*
   goto CLEAR
endif
if $OS=VM then
   shell ERASE PAWTEST1 HIGZ *
   shell ERASE PAWTEST1 TXT *
   goto CLEAR
endif
message ' Please delete files pawtest.higz and pawtest1.txt when leaving PAW'
CLEAR:
pi/del *
*
set *
opt *
zon 1
h/del *
v/del OK
*
RETURN
