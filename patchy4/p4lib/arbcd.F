CDECK  ID>, ARBCD.
      SUBROUTINE ARBCD

C-    DRIVE CARD INPUT TO YPATCHY

      COMMON /QBCD/  IQNUM2(11),IQLETT(26),IQNUM(10),IQPLUS
     +,              IQMINS,IQSTAR,IQSLAS,IQOPEN,IQCLOS,IQDOLL,IQEQU
     +,              IQBLAN,IQCOMA,IQDOT,IQAPO,  IQCROS
      COMMON /ARRCOM/LUNPAM,NCHKD,NWKD,NCARDP,NAREOF,NSKIPR,KDHOLD(20)
     +,              NTRUNC,IPROMU,IPROMI
      COMMON /CCPARA/NCHCCD,NCHCCT,KARDCC(84),   JCCTYP,JCCPRE,JCCEND
     +,              MCCPAR(120),NCCPAR,MXCCIF,JCCIFV,JCCBAD,JCCWK(4)
     +,              JCCPP,JCCPD,JCCPZ,JCCPT,JCCPIF,JCCPC,JCCPN
     +,              NCCPP,NCCPD,NCCPZ,NCCPT,NCCPIF,NCCPC,NCCPN
      COMMON /CCTYPE/MCCQUI,MCCPAM,MCCTIT,MCCPAT,MCCDEC,MCCDEF,MCCEOD
     +,              MCCASM,MCCOPT,MCCUSE
      COMMON /CONST/ MPAK2(2),MPAK5(2),MPAK9(2),MPAK15(2),DAYTIM(3)
     +,              NWNAME,NWSENM,NWSEN1,LARGE
      PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)
      COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS
                         DIMENSION    IQUEST(30)
                         DIMENSION                 LQ(99), IQ(99), Q(99)
                         EQUIVALENCE (QUEST,IQUEST),    (LQUSER,LQ,IQ,Q)
      COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQSYS(24),LQPRIV(7)
     +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP
     +, KADRV(9), LEXD,LEXH,LEXP,LPAM,LDECO, LADRV(14)
     +, NVOPER(6),MOPTIO(31),JANSW,JCARD,NDECKR,NVUSEB(14),MEXDEC(6)
     +, NVINC(6),NVUTY(16),NVIMAT(6),NVACT(6),NVGARB(6),NVWARN(6)
     +, JASK,JCWAIT,JCWDEL,LARMAT,LAREND,NCARR
     +, NVARR(10), IDARRV(8),JPROPD,MODPAM, NVARRI(9),LARX,LARXE,LINBUF
     +, NVCCP(7),JARDO,JARWT,JARLEV
     +, NVDEP(14),LDPMAT,JDPMAT,LDPACT,JDPACT,NDPLEV,MDEPAR, NVDEPL(6)
     +, MWK(80),MWKX(80)
C--------------    END CDE                             -----------------  ------
      DIMENSION    IN(20)
      EQUIVALENCE (IN(1),KDHOLD(1))


C--               JARDO= -2 POSITION DECK, -1 IGNORE, 0 READ, 1 PRE-READ

      NVDEP(13)= JCARD
      LDPMAT   = LARMAT
    9 IF  (JARDO)            21,41,31

C-------           IGNORE CARDS UNTIL 'JARWT' OR C/C

   20 JCARD = JCARD + 1
      JCCPRE= 0

   21 IF (JCCPRE.NE.0)       GO TO 20
   22 IF (JCARD.EQ.JARWT)    GO TO 29
      CALL KDNEXT (IN(1))
      IF (NCHKD.LT.0)        GO TO 73
      JCARD = JCARD + 1
      JCCTYP= JARTYP (IN(1))
      IF (JCCTYP.EQ.0)       GO TO 22

C--                POSITION DECK

      IF (JARDO.EQ.-1)       GO TO 24
      IF (JCCTYP.GE.MCCEOD)  GO TO 22
      CALL CCKRAK (IN(1))
      IF (JCCTYP.GE.MCCEOD)  GO TO 22
      RETURN

C--                SKIP DATA

   24 IF (JCCTYP.GE.0)       GO TO 25
      IF (-JCCTYP.LT.JARLEV) GO TO 22
   25 CALL CCKRAK (IN(1))
      RETURN

C----              STOP ON CARD 'JARWT'

   28 NVDEP(11) = LARMAT - LDPMAT
      NVDEP(12) = JCARD - NVDEP(13)
   29 JCCTYP = 0
      RETURN

C-------           PRE-READ C/C

   31 CALL KDNEXT (IN(1))
      IF (NCHKD.LT.0)        GO TO 73
      JCCPRE = 7
      JCCTYP = JARTYP (IN(1))
      IF (JCCTYP.EQ.0)       RETURN
      JCARD = JCARD + 1
      GO TO 25


C-------           COLLECT CARDS UNTIL 'JARWT' OR C/C OR BUFFER FULL

   40 JCCPRE= 0
      JCARD = JCARD + 1
      CALL UCOPY (IN(1),IQ(LARMAT),NWKD)
      LARMAT = LARMAT + NWKD

   41 IF (JCCPRE.NE.0)       GO TO 40
   42 IF (JCARD.EQ.JARWT)    GO TO 28
      IF (LARMAT.GE.LAREND)  GO TO 28
      CALL KDNEXT (IQ(LARMAT))
      IF (NCHKD.LT.0)        GO TO 73
      JCARD = JCARD + 1
      JCCTYP= JARTYP (IQ(LARMAT))
      IF (JCCTYP.NE.0)       GO TO 51
   44 LARMAT= LARMAT + NWKD
      GO TO 42

C----              STOP ON CONTROL-CARD

   51 NVDEP(11) = LARMAT - LDPMAT
      NVDEP(12) = JCARD-1 - NVDEP(13)
      CALL CCKRAK (IQ(LARMAT))
      RETURN

C------            STOP ON   EOS (-1),  EOF (-2),  EOI (-3)

   73 JCCTYP= MCCEOD
      JCCBAD= 0
      NCCPIF= 0
      JANSW = 7
      JPROPD= 4
   79 NVDEP(11) = LARMAT - LDPMAT
      NVDEP(12) = JCARD - NVDEP(13)
      RETURN
      END
