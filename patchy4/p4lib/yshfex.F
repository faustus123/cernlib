CDECK  ID>, YSHFEX.
      SUBROUTINE YSHFEX

C-    YSHIFT, DE-ACTIVATION/ACTIVATION OF CARDS
C-            ACCORDING TO YSHIFT-TAGS IN COLS. 73-80

      COMMON /SLATE/ ISLATE(40)
      COMMON /MQCMOV/NQSYSS
      COMMON /MQCM/         NQSYSR,NQSYSL,NQLINK,LQWORG,LQWORK,LQTOL
     +,              LQSTA,LQEND,LQFIX,NQMAX, NQRESV,NQMEM,LQADR,LQADR2
      COMMON /QBCD/  IQNUM2(11),IQLETT(26),IQNUM(10),IQPLUS
     +,              IQMINS,IQSTAR,IQSLAS,IQOPEN,IQCLOS,IQDOLL,IQEQU
     +,              IQBLAN,IQCOMA,IQDOT,IQAPO,  IQCROS
      PARAMETER      (IQBITW=32, IQBITC=8, IQCHAW=4)
      COMMON /QMACH/ NQBITW,NQCHAW,NQLNOR,NQLMAX,NQLPTH,NQRMAX,QLPCT
     +,              NQOCT(3),NQHEX(3),NQOCTD(3)
      COMMON /QUNIT/ IQREAD,IQPRNT,IQPR2,IQLOG,IQPNCH,IQTTIN,IQTYPE
     +,              IQDLUN,IQFLUN,IQHLUN,IQCLUN,  NQUSED
      COMMON /ARRCOM/LUNPAM,NCHKD,NWKD,NCARDP,NAREOF,NSKIPR,KDHOLD(20)
     +,              NTRUNC,IPROMU,IPROMI
      COMMON /IOFCOM/IOTALL,IOTOFF,IOTON,IOSPEC,IOPARF(5),IOMODE(12)
      COMMON /CCPARA/NCHCCD,NCHCCT,KARDCC(84),   JCCTYP,JCCPRE,JCCEND
     +,              MCCPAR(120),NCCPAR,MXCCIF,JCCIFV,JCCBAD,JCCWK(4)
     +,              JCCPP,JCCPD,JCCPZ,JCCPT,JCCPIF,JCCPC,JCCPN
     +,              NCCPP,NCCPD,NCCPZ,NCCPT,NCCPIF,NCCPC,NCCPN
      COMMON /CCPARU/MCCTOU,JCCLOW,JCCTPX
      COMMON /CCTEXT/NCCVEC,MCCVEC(28),MCCSW(29),NCCDFI,MCCDF(24)
      COMMON /CCTYPE/MCCQUI,MCCPAM,MCCTIT,MCCPAT,MCCDEC,MCCDEF,MCCEOD
     +,              MCCASM,MCCOPT,MCCUSE
      COMMON /DPLINE/LTK,NWTK, KIMAPR(3), KIMA(20), KIMAPS(9)
      PARAMETER      (KDNWT=20, KDNWT1=19,KDNCHW=4, KDBITS=8)
      PARAMETER      (KDPOST=25,KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=1)
      COMMON /KDPKCM/KDBLAN,KDEOD(2)
      PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)
      COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS
                         DIMENSION    IQUEST(30)
                         DIMENSION                 LQ(99), IQ(99), Q(99)
                         EQUIVALENCE (QUEST,IQUEST),    (LQUSER,LQ,IQ,Q)
      COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQSYS(24),LQPRIV(7)
     +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP
     +, KADRV(14),LADRV(11),LCCIX,LBUF,LLAST
     +, NVOPER(6),MOPTIO(31),JANSW,JCARD,NDECKR,NVUSEX(20)
     +, NVINC(6),NVUTY(17),IDEOF(9),NVPROX(6),LOGLVG,LOGLEV,NVWARX(6)
     +, NVOLDQ(4),MVOLD1,MVOLDN,  NVOLD(7),NRTOLD,NROLD,MAXEOF
     +, IDOLDV(8),JPDOLD,JOLD, NVARRI(9),LARX,LARXE,LINBIN, NVCCP(10)
     +, NVNEW(7),NRTNEW,NRNEW,LLASTN, IDNEWV(8),JPDNEW,NDKNEW
     +, NVNEWL(3),NCDECK,JNEW,MODEPR,  MWK(80),MWKX(80)
     +,    NINDX,NTOTCC,LEV,NCHTAG,NWWTAG, KD1ORG,KD1REP
      DIMENSION      IDD(2),             IDP(2),             IDF(2)
      EQUIVALENCE
     +       (IDD(1),IDNEWV(1)), (IDP(1),IDNEWV(3)), (IDF(1),IDNEWV(5))
C--------------    END CDE                             -----------------  ------
      EQUIVALENCE (JCCF,JCCPC)
      EQUIVALENCE (LINDX,LQMAIN),(LKARD,LQUSER(2)),(LMAC,LQUSER(3))
      DIMENSION    MTRANS(2), MNAMES(8), MACID(8),   KARD(80)
      EQUIVALENCE (NLVMAX,MNAMES(6)), (KARD(1),KARDCC(1))
      EQUIVALENCE (MACID(1),IQUEST(1))


      DATA  MNAMES /4HIND ,60,0,60,   4HKDS ,5,0,420/
      DATA  MTRANS /4HC   , 4H    /,  MOLD/4HOLD /, MNEW/4HNEW /


C--        SET UP MACRO BANKS

      IF (LOGLEV.GE.2)   WRITE (IQPRNT,9001)
      CALL YSHMAC (4HA4  ,33,'TAG,A4,-A5,A6,A8,A10,A5M,A6M,A8M.')
      CALL YSHMAC (4HA5  ,33,'TAG,A5,A5M,-A4,A6,A8,A10,A6M,A8M.')
      CALL YSHMAC (4HA6  ,33,'TAG,A6,A5M,A6M,-A4,A5,A8,A10,A8M.')
      CALL YSHMAC (4HA8  ,33,'TAG,A8,A5M,A6M,A8M,-A4,A5,A6,A10.')
      CALL YSHMAC (4HA10 ,33,'TAG,A10,A5M,A6M,A8M,-A4,A5,A6,A8.')

      CALL YSHMAC (4HB32 ,40,'TAG,B32,-B36,B48,B60,B64,B36M,B48M,B60M.')
      CALL YSHMAC (4HB36 ,40,'TAG,B36,B36M,-B32,B48,B60,B64,B48M,B60M.')
      CALL YSHMAC (4HB48 ,40,'TAG,B48,B36M,B48M,-B32,B36,B60,B64,B60M.')
      CALL YSHMAC (4HB60 ,40,'TAG,B60,B36M,B48M,B60M,-B32,B36,B48,B64.')
      CALL YSHMAC (4HB64 ,40,'TAG,B64,B36M,B48M,B60M,-B32,B36,B48,B60.')

      CALL YSHMAC (4HOCT ,13,'TAG,OCT,-HEX.')
      CALL YSHMAC (4HHEX ,13,'TAG,HEX,-OCT.')
      CALL YSHMAC (4HL20 ,13,'TAG,L20,-L30.')
      CALL YSHMAC (4HL30 ,13,'TAG,L30,-L20.')

      CALL YSHMAC (4HIBM ,37,'MAC,A4,B32,HEX,L30,+IBM,-UNI,PDP,CDC.')
      CALL YSHMAC (4HUNI ,37,'MAC,A6,B36,OCT,L30,+UNI,-IBM,PDP,CDC.')
      CALL YSHMAC (4HPDP ,37,'MAC,A5,B36,OCT,L30,+PDP,-IBM,UNI,CDC.')
      CALL YSHMAC (4HCDC ,38,'MAC,A10,B60,OCT,L30,+CDC,-IBM,UNI,PDP.')
      CALL YSHMAC (4HVAX ,36,'MAC,A4,B32,HEX,L30,-IBM,UNI,PDP,CDC.')
      CALL YSHMAC(5HNORD ,36,'MAC,A4,B32,OCT,L30,-IBM,UNI,PDP,CDC.')

C--        LIFT INDEX BANK FOR TAG BANK POINTERS

      CALL LIFTBK (LINDX,0,0,MNAMES(1),0)

C--        LIFT BANK FOR MULTI-LEVEL CARD-BUFFER
C--        LINK N POINTS TO CARD OF LEVEL N

      CALL LIFTBK (LKARD,0,0,MNAMES(5),0)
      CALL VZERO (IQ(LKARD+1),MNAMES(8))
      J = 3
      DO 10 I=1,NLVMAX
      IQ(LKARD-I) = LKARD + J
   10 J           = J + 83

      CALL SBYT (KDMARK,MTRANS(1),KDPOST,KDBITS)
      CALL SBYT (KDMARK,MTRANS(2),KDPOST,KDBITS)

      NVOLD(6) = MOLD
      NVNEW(6) = MNEW
      MODEPR   = IQPLUS
      NWWTAG   = 73/IQCHAW + 1
      NCINP    = 0

      LUNPAM = IQREAD
      NCHKD  = -1
      IF (IQREAD.NE.0)  CALL KDNGO


C--        RESTART WITH OPTION  'CLEAR'

      LWSAV  = LQWORK
   11 LQWORK = LWSAV
      N      = MNAMES(2)
      CALL VZERO (IQ(LINDX-N),N)
      NINDX  = 0
      IF (IQREAD.EQ.0)       GO TO 55

C--        RESTART CONTINUE

   12 IF (IQREAD.EQ.0)       GO TO 98
      WRITE (IQPRNT,9011)
      MCCTOU = 7


C--------- READ DATA CARDS

   15 CALL KDNEXT (KDHOLD(1))
      IF (NCHKD.LT.0)        GO TO 97
      NCINP = NCINP + 1
      CALL UBLOW  (KDHOLD(1),KARDCC(1),NCHKD)
      WRITE (IQPRNT,9015) NCINP,(KARDCC(J),J=1,NCHKD)

      JCCTYP = JARTYP (KDHOLD(1))
      IF (JCCTYP.EQ.0)       GO TO 21
      CALL CCKRAK (KDHOLD(1))

      IF (JCCTYP.EQ.MCCQUI)  GO TO 97
      IF (JCCTYP.EQ.MCCPAM)  GO TO 51
      IF (JCCTYP.NE.MCCOPT)  GO TO 15

C--            ANALYSE  +OPTION, T=CLEAR,BYPASS,ALL,UNKNOWN

      CALL SETOPT
      CALL LOGLV (MOPTIO(31),-JCCPC,MCCPAR(JCCPC+1))
      LOGLVG = LOGLEV
      MOPTIO(21) = MAX  (MOPTIO(21),MOPTIO(1))
      IF (MOPTIO(3).EQ.0)    GO TO 15
      CALL SBIT0 (MOPTIO(31),3)
      GO TO 11


C--        STORE NEW SELECTOR CARD IN CARD-BUFFER AT LEVEL 1

   21 LEV   = 1
      L     = IQ(LKARD-1)
      NCHKD = MIN  (NCHKD,72)

      CALL ULEFT (KARDCC(1),1,NCHKD)
      NCHKD = ISLATE(1)
      IF (NCHKD.EQ.0)        GO TO 15
      CALL CCTOUP (KARDCC(1),NCHKD)
      CALL UCOPY (KARDCC(1),IQ(L+1),NCHKD)

   26 NCHKD   = IUFIND (IQDOT,IQ(L+1),1,NCHKD) - 1
      IQ(L-1) = NCHKD
      IQ(L)   = 0

C--        GET CARD ANALYZED NOW

   27 CALL YSHANL

      IF (LMAC.NE.0)         GO TO 31
      LEV = LEV - 1
      IF (LEV.EQ.0)          GO TO 15
      GO TO 27

C--        NEW MACRO

   31 LEV   = LEV + 1
      L     = IQ(LKARD-LEV)
      NCHKD = IQ(LMAC+3)

      CALL UBLOW (IQ(LMAC+1),MACID(1),8)
      CALL UBLOW (IQ(LMAC+4),IQ(L+1),NCHKD)
      N1 = L + 1
      N2 = L + NCHKD
      WRITE (IQPRNT,9031) MACID, (IQ(J),J=N1,N2)
      GO TO 26


C---------         SEARCH PACKED PAM-FILE

C--        +PAM, F=FNAME, T=ATTACH,RESUME,EOF,HOLD,DETACH, N=MAX

   51 IF (JCCF.EQ.0)         GO TO 55
      IF (NRTOLD.LT.0)       GO TO 54
      CALL AUXFIL (512,NVOLD(1),0)
   54 NRTOLD = -1
      NVOLD(3) = MCCPAR(JCCF+1)

   55 NVOLD(5) = IOTYPE (MCCPAR(JCCPT+1),4)
      MAXEOF   = MCCPAR(JCCPN+1)
      IF (MAXEOF.EQ.0)  MAXEOF = 999
      CALL AUXFIL (256+2048,NVOLD(1),0)
      NCINP = MAX  (NCINP,1)
      MCCTOU = 0

C--                READ FILE-IDENT RECORD

   61 CALL POPIN
      IF (NVARRI(1).EQ.4)    GO TO 12
      LPRDEC = 0
      LPRPAT = 0
      JMODDK = 0
      JMODPT = 0
      KD1ORG = 0
      JTRANS = 2*MOPTIO(24) + MOPTIO(25)
      IF (JTRANS.EQ.0)       GO TO 65
      JTRANS = MIN  (JTRANS,2)
      KD1ORG = MTRANS(3-JTRANS)
      KD1REP = MTRANS(JTRANS)

C--                READ NEXT RECORD AND SEND IT TO POPOFF RIGHT AWAY

   65 IQ(LBUF+1) = 7
      CALL POPIN
      LTK    = LINBIN + NVARRI(9)
      NTOTCC = JCARD  + NVARRI(8)

      IQ(LBUF+1) = 0
      CALL POPOFF

C--            IF OPTION *BYPASS* , JUST COPY

      IF (MOPTIO(2).NE.0)    GO TO 81


C--                START OF PATCH/DECK, CHECK T=ASL,COMP,DATA

      IF (NVARRI(1).EQ.0)    GO TO 71
      IF (NVARRI(1).GE.3)    GO TO 71
      JCCTYP = MCCDEC
      NWKD   = KDSTEP (IQ(LTK),1)
      NCHKD  = KDNCHW*NWKD - 1
      CALL CCKRAK (IQ(LTK))
C     JMODDK = MCCPAR(JCCPT+1) .AND. 13                                  MSKC
      JMODDK = JBYTET (13,MCCPAR(JCCPT+1),1,4)                          -MSK
      LPRDEC = NDKNEW-1
      IF (NVARRI(1).EQ.1)    GO TO 67
      LPRPAT = LPRDEC
      LPRDEC = 0
      JMODPT = JMODDK
   67 IF (JMODDK.EQ.0)       JMODDK=JMODPT
C     IF ((JMODDK.AND.4).NE.0)   JMODDK=0                                MSKC
      IF (JBIT(JMODDK,3).NE.0)   JMODDK=0                               -MSK

C--                PROCESS CURRENT RECORD

   71 IF (JMODDK.NE.0)       GO TO 81
      JCARD = JCARD - 1
   72 CALL YSHTAG
      IF (NCHTAG.LT.0)       GO TO 81
      IF (LOGLEV.GE.3)       GO TO 74
      IF (LOGLEV.GE.1)       GO TO 73
      IF (LPRPAT.EQ.0)       GO TO 73
      WRITE (IQPRNT,9043) IDP,LPRPAT
      LPRPAT = 0
   73 IF (LPRDEC.EQ.0)       GO TO 74
      WRITE (IQPRNT,9044) LPRDEC,IDD
      LPRDEC = 0

   74 IF (NCHTAG.NE.0)       GO TO 75
      WRITE (IQPRNT,9073) JCARD,(KARD(J),J=1,NCHCCT)
      GO TO 72

   75 N = 80 - NCHCCT
      IF (N.NE.0)  CALL VBLANK (KARD(NCHCCT+1),N)
      WRITE (IQPRNT,9074) JCARD,KARD
      GO TO 72

C--                RECORD FINISHED, CHECK NEXT IS P/D

   81 IF (NVARRI(3).EQ.0)    GO TO 65
      IF (NVARRI(3).EQ.3)    GO TO 84
      IQ(LBUF+3) = NVARRI(5)
      IQ(LBUF+4) = NVARRI(6)                                            -A8M
      GO TO 65


C----              END OF PAM

   84 IF (NVOLD(7)+1 .GE. MAXEOF)  IOTON = 512
      CALL AUXFIL (0,NVOLD(1),0)
      IF (IOMODE(10).EQ.0)    GO TO 61
      IF (IQREAD.NE.0)       GO TO 12

C----              +QUIT, END OF RUN

   97 IQREAD = 0
      IF (NCINP.EQ.0)        GO TO 55
   98 CALL POPREW
      IF (NRTOLD.GE.0)  CALL AUXFIL (512,NVOLD(1),0)
      RETURN

 9001 FORMAT (1X/' LIST OF AVAILABLE MACROS.'/1X)
 9011 FORMAT (1X/1X,19(1H-)/1X)
 9015 FORMAT (I5,1X,80A1)
 9031 FORMAT (6X,12HSTART MACRO ,8A1,1H',80A1)
C9043 FORMAT (5X,2HP=,A8,   I5,5H + D=)                                  A8M
C9043 FORMAT (5X,2HP=,A6,A2,I5,5H + D=)                                  A6
C9043 FORMAT (5X,2HP=,A5,A3,I5,5H + D=)                                  A5
 9043 FORMAT (5X,2HP=,2A4,  I5,5H + D=)                                  A4
C9044 FORMAT (15X,I5,5H + D=,A8)                                         A8M
C9044 FORMAT (15X,I5,5H + D=,2A6)                                        A6
C9044 FORMAT (15X,I5,5H + D=,2A5)                                        A5
 9044 FORMAT (15X,I5,5H + D=,2A4)                                        A4
 9074 FORMAT (29X,I5,3H - ,72A1,1H?,8A1,2H ?)
 9073 FORMAT (29X,I5,3H - ,72A1,1H.,8A1)
      END
